import urllib2
import xmltodict
from urllib import quote

class Lyrics:

	def __init__(self, artist, title):
		self.artist = artist
		self.title = title
		self.name = artist + ' - ' + title

	def getLyric(self):
		artist = self.artist
		title = self.title
		chart = ChartLyrics(artist, title)
		lyric = chart.getLyric()
		provider = 'chartlyrics.com'
		if lyric == 0:
			mldb = MLDB(artist,title)
			lyric = MLDB.getLyric()
			provider = 'mldb.org'

		
		dic = {'Artist': artist, 'Title': title, 'Provider': provider, 'Lyrics': lyric}
		return dic

class ChartLyrics:
	def __init__(self, artist, title):
		self.artist = artist
		self.title = title

	def search(self):
		url = 'http://api.chartlyrics.com/apiv1.asmx/SearchLyric?artist=' + quote(self.artist) + '&song=' + quote(self.title)
		try:
			urlobj = urllib2.urlopen(url)
			xml = urlobj.read()
			urlobj.close()
		except urllib2.URLError:
			xml = 0
		if xml != 0:
			parsed = xmltodict.xmltodict(xml)
			parsed = parsed['SearchLyricResult'][0]

			lyricid = parsed['LyricId']
			lyricchecksum = parsed['LyricChecksum']

			dic = {'ID': lyricid[0], 'Checksum': lyricchecksum[0]}
			self.lyricid = lyricid[0]
			self.lyricchecksum = lyricchecksum[0]
			return dic
		else:
			return 0

	def getLyric(self):
		self.search()
		try:
			lyricid = self.lyricid
			checksum = self.lyricchecksum
		except AttributeError:
			lyricid = 0
			checksum = 0

		if lyricid != 0 and checksum != 0:
			url = 'http://api.chartlyrics.com/apiv1.asmx/GetLyric?lyricId=' + lyricid + '&lyricCheckSum=' + checksum
			try:
				urlobj = urllib2.urlopen(url)
				xml = urlobj.read()
				urlobj.close()
				parsed = xmltodict.xmltodict(xml)
				lyric = parsed['Lyric'][0]
				print lyric
				return lyric
				print OK
			except urllib2.URLError:
				return 0
		else:
			return 0

class MLDB:
	def __init__(self, artist, title):
		self.artist = artist
		self.title = title

	def search(self):
		keywords = self.artist + ' ' + self.title
		keywords = quote(keywords)
		url = 'http://www.mldb.org/search?mq=' + keywords + '&si=0&mm=0&ob=1'
		urlobj = urllib2.urlopen(url)
		data = urlobj.read()
		urlobj.close()
		current = urlobj.geturl()
		if 'http://www.mldb.org/song-' in current:
			self.songsrc = data
			return 'song'
		else:
			self.searchsrc = data
			return 'search'

	def songParse(self):
		data = self.songsrc
		data = data.split('<p class="songtext" lang="EN">')
		lyrics = data[1]
		lyrics = lyrics.split('</p>')
		lyrics = lyrics[0]
		lines = lyrics.split('<br />')
		lyrics = ''
		for line in lines:
			lyrics = lyrics + line
		print lyrics

	def searchParse(self):
		data = self.searchsrc
		data = data.split('<a href="song-')
		data = data[1]
		data = data.split('">')
		data = data[0]
		url = 'http://www.mldb.org/song-' + data
		
		urlobj = urllib2.urlopen(url)
		self.songsrc = urlobj.read()
		urlobj.close()

	def getLyric(self):
		searchpage = self.search()

		if searchpage == 'song':
			lyrics = self.songParse()
			return lyrics
		elif searchpage == 'search':
			lyricsurl = self.searchParse()
			lyrics = self.songParse()
			return lyrics			
		else:
			return 0
